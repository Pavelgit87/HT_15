# –ó–∞–¥–∞–Ω–∏–µ No1
# üìå –í–æ–∑—å–º–∏—Ç–µ –ª—é–±—ã–µ 1 - 3 –∑–∞–¥–∞—á–∏ –∏–∑ –ø—Ä–æ—à–ª—ã—Ö –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π.
# –î–æ–±–∞–≤—å—Ç–µ –∫ –Ω–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –∏ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
# –¢–∞–∫–∂–µ —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.

from ex_01_Matrix import Matrix
from ex_01_MyException import TwoWayEqualSizeException, OneWayEqualSizeException

mtrx_1 = Matrix([[2, 1], [-3, 0], [4, -1]])
mtrx_2 = Matrix([[5, -1, 6], [-3, 0, 7]])
mtrx_3 = Matrix([[2, 1], [-3, 0], [4, -1]])
mtrxs = (mtrx_1, mtrx_2, mtrx_3)
for elem in mtrxs:
    print(repr(elem))
print('---')


def main(first: Matrix, second: Matrix):
    if not Matrix._eq_len(first, second):
        raise TwoWayEqualSizeException(first, second)
    else:
        print(first == second)
        print(first + second)

    if first.clmns != second.rows:
        raise OneWayEqualSizeException(first, second)
    else:
        print(first * second)


if __name__ == '__main__':
    main(mtrx_1, mtrx_3)
    main(mtrx_1, mtrx_2)